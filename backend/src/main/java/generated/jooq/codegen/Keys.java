/*
 * This file is generated by jOOQ.
 */
package codegen;


import codegen.tables.Databasechangeloglock;
import codegen.tables.ServiceLevelObjective;
import codegen.tables.Sla;
import codegen.tables.SlaReview;
import codegen.tables.SlaUser;
import codegen.tables.records.DatabasechangeloglockRecord;
import codegen.tables.records.ServiceLevelObjectiveRecord;
import codegen.tables.records.SlaRecord;
import codegen.tables.records.SlaReviewRecord;
import codegen.tables.records.SlaUserRecord;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>public</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<ServiceLevelObjectiveRecord, Integer> IDENTITY_SERVICE_LEVEL_OBJECTIVE = Identities0.IDENTITY_SERVICE_LEVEL_OBJECTIVE;
    public static final Identity<SlaRecord, Integer> IDENTITY_SLA = Identities0.IDENTITY_SLA;
    public static final Identity<SlaReviewRecord, Integer> IDENTITY_SLA_REVIEW = Identities0.IDENTITY_SLA_REVIEW;
    public static final Identity<SlaUserRecord, Integer> IDENTITY_SLA_USER = Identities0.IDENTITY_SLA_USER;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<DatabasechangeloglockRecord> DATABASECHANGELOGLOCK_PKEY = UniqueKeys0.DATABASECHANGELOGLOCK_PKEY;
    public static final UniqueKey<ServiceLevelObjectiveRecord> SERVICE_LEVEL_OBJECTIVE_PKEY = UniqueKeys0.SERVICE_LEVEL_OBJECTIVE_PKEY;
    public static final UniqueKey<SlaRecord> SLA_PKEY = UniqueKeys0.SLA_PKEY;
    public static final UniqueKey<SlaReviewRecord> SLA_REVIEW_PKEY = UniqueKeys0.SLA_REVIEW_PKEY;
    public static final UniqueKey<SlaUserRecord> SLA_USER_PKEY = UniqueKeys0.SLA_USER_PKEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<ServiceLevelObjectiveRecord, SlaRecord> SERVICE_LEVEL_OBJECTIVE__SERVICE_LEVEL_OBJECTIVE_SLA_ID_FKEY = ForeignKeys0.SERVICE_LEVEL_OBJECTIVE__SERVICE_LEVEL_OBJECTIVE_SLA_ID_FKEY;
    public static final ForeignKey<SlaRecord, SlaUserRecord> SLA__SLA_SERVICE_PROVIDER_ID_FKEY = ForeignKeys0.SLA__SLA_SERVICE_PROVIDER_ID_FKEY;
    public static final ForeignKey<SlaRecord, SlaUserRecord> SLA__SLA_SERVICE_CUSTOMER_ID_FKEY = ForeignKeys0.SLA__SLA_SERVICE_CUSTOMER_ID_FKEY;
    public static final ForeignKey<SlaRecord, SlaUserRecord> SLA__FK_MONITORING = ForeignKeys0.SLA__FK_MONITORING;
    public static final ForeignKey<SlaReviewRecord, SlaRecord> SLA_REVIEW__SLA_REVIEW_SLA_ID_FKEY = ForeignKeys0.SLA_REVIEW__SLA_REVIEW_SLA_ID_FKEY;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<ServiceLevelObjectiveRecord, Integer> IDENTITY_SERVICE_LEVEL_OBJECTIVE = Internal.createIdentity(ServiceLevelObjective.SERVICE_LEVEL_OBJECTIVE, ServiceLevelObjective.SERVICE_LEVEL_OBJECTIVE.ID);
        public static Identity<SlaRecord, Integer> IDENTITY_SLA = Internal.createIdentity(Sla.SLA, Sla.SLA.ID);
        public static Identity<SlaReviewRecord, Integer> IDENTITY_SLA_REVIEW = Internal.createIdentity(SlaReview.SLA_REVIEW, SlaReview.SLA_REVIEW.ID);
        public static Identity<SlaUserRecord, Integer> IDENTITY_SLA_USER = Internal.createIdentity(SlaUser.SLA_USER, SlaUser.SLA_USER.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<DatabasechangeloglockRecord> DATABASECHANGELOGLOCK_PKEY = Internal.createUniqueKey(Databasechangeloglock.DATABASECHANGELOGLOCK, "databasechangeloglock_pkey", Databasechangeloglock.DATABASECHANGELOGLOCK.ID);
        public static final UniqueKey<ServiceLevelObjectiveRecord> SERVICE_LEVEL_OBJECTIVE_PKEY = Internal.createUniqueKey(ServiceLevelObjective.SERVICE_LEVEL_OBJECTIVE, "service_level_objective_pkey", ServiceLevelObjective.SERVICE_LEVEL_OBJECTIVE.ID);
        public static final UniqueKey<SlaRecord> SLA_PKEY = Internal.createUniqueKey(Sla.SLA, "sla_pkey", Sla.SLA.ID);
        public static final UniqueKey<SlaReviewRecord> SLA_REVIEW_PKEY = Internal.createUniqueKey(SlaReview.SLA_REVIEW, "sla_review_pkey", SlaReview.SLA_REVIEW.ID);
        public static final UniqueKey<SlaUserRecord> SLA_USER_PKEY = Internal.createUniqueKey(SlaUser.SLA_USER, "sla_user_pkey", SlaUser.SLA_USER.ID);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<ServiceLevelObjectiveRecord, SlaRecord> SERVICE_LEVEL_OBJECTIVE__SERVICE_LEVEL_OBJECTIVE_SLA_ID_FKEY = Internal.createForeignKey(codegen.Keys.SLA_PKEY, ServiceLevelObjective.SERVICE_LEVEL_OBJECTIVE, "service_level_objective__service_level_objective_sla_id_fkey", ServiceLevelObjective.SERVICE_LEVEL_OBJECTIVE.SLA_ID);
        public static final ForeignKey<SlaRecord, SlaUserRecord> SLA__SLA_SERVICE_PROVIDER_ID_FKEY = Internal.createForeignKey(codegen.Keys.SLA_USER_PKEY, Sla.SLA, "sla__sla_service_provider_id_fkey", Sla.SLA.SERVICE_PROVIDER_ID);
        public static final ForeignKey<SlaRecord, SlaUserRecord> SLA__SLA_SERVICE_CUSTOMER_ID_FKEY = Internal.createForeignKey(codegen.Keys.SLA_USER_PKEY, Sla.SLA, "sla__sla_service_customer_id_fkey", Sla.SLA.SERVICE_CUSTOMER_ID);
        public static final ForeignKey<SlaRecord, SlaUserRecord> SLA__FK_MONITORING = Internal.createForeignKey(codegen.Keys.SLA_USER_PKEY, Sla.SLA, "sla__fk_monitoring", Sla.SLA.MONITORING_SOLUTION_ID);
        public static final ForeignKey<SlaReviewRecord, SlaRecord> SLA_REVIEW__SLA_REVIEW_SLA_ID_FKEY = Internal.createForeignKey(codegen.Keys.SLA_PKEY, SlaReview.SLA_REVIEW, "sla_review__sla_review_sla_id_fkey", SlaReview.SLA_REVIEW.SLA_ID);
    }
}
