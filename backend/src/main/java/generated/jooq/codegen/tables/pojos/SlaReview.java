/*
 * This file is generated by jOOQ.
 */
package codegen.tables.pojos;


import java.io.Serializable;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SlaReview implements Serializable {

    private static final long serialVersionUID = 352535040;

    private Integer id;
    private String  property;
    private Integer slaId;
    private Boolean accepted;
    private String  comment;

    public SlaReview() {}

    public SlaReview(SlaReview value) {
        this.id = value.id;
        this.property = value.property;
        this.slaId = value.slaId;
        this.accepted = value.accepted;
        this.comment = value.comment;
    }

    public SlaReview(
        Integer id,
        String  property,
        Integer slaId,
        Boolean accepted,
        String  comment
    ) {
        this.id = id;
        this.property = property;
        this.slaId = slaId;
        this.accepted = accepted;
        this.comment = comment;
    }

    public Integer getId() {
        return this.id;
    }

    public SlaReview setId(Integer id) {
        this.id = id;
        return this;
    }

    public String getProperty() {
        return this.property;
    }

    public SlaReview setProperty(String property) {
        this.property = property;
        return this;
    }

    public Integer getSlaId() {
        return this.slaId;
    }

    public SlaReview setSlaId(Integer slaId) {
        this.slaId = slaId;
        return this;
    }

    public Boolean getAccepted() {
        return this.accepted;
    }

    public SlaReview setAccepted(Boolean accepted) {
        this.accepted = accepted;
        return this;
    }

    public String getComment() {
        return this.comment;
    }

    public SlaReview setComment(String comment) {
        this.comment = comment;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final SlaReview other = (SlaReview) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (property == null) {
            if (other.property != null)
                return false;
        }
        else if (!property.equals(other.property))
            return false;
        if (slaId == null) {
            if (other.slaId != null)
                return false;
        }
        else if (!slaId.equals(other.slaId))
            return false;
        if (accepted == null) {
            if (other.accepted != null)
                return false;
        }
        else if (!accepted.equals(other.accepted))
            return false;
        if (comment == null) {
            if (other.comment != null)
                return false;
        }
        else if (!comment.equals(other.comment))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.property == null) ? 0 : this.property.hashCode());
        result = prime * result + ((this.slaId == null) ? 0 : this.slaId.hashCode());
        result = prime * result + ((this.accepted == null) ? 0 : this.accepted.hashCode());
        result = prime * result + ((this.comment == null) ? 0 : this.comment.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("SlaReview (");

        sb.append(id);
        sb.append(", ").append(property);
        sb.append(", ").append(slaId);
        sb.append(", ").append(accepted);
        sb.append(", ").append(comment);

        sb.append(")");
        return sb.toString();
    }
}
