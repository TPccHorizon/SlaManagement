/*
 * This file is generated by jOOQ.
 */
package codegen.tables.records;


import codegen.tables.ServiceLevelObjective;

import java.math.BigDecimal;
import java.sql.Date;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ServiceLevelObjectiveRecord extends UpdatableRecordImpl<ServiceLevelObjectiveRecord> implements Record13<Integer, String, Date, Date, Integer, String, String, Integer, BigDecimal, String, BigDecimal, BigDecimal, BigDecimal> {

    private static final long serialVersionUID = -794817694;

    /**
     * Setter for <code>public.service_level_objective.id</code>.
     */
    public ServiceLevelObjectiveRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.service_level_objective.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.service_level_objective.name</code>.
     */
    public ServiceLevelObjectiveRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.service_level_objective.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.service_level_objective.valid_from</code>.
     */
    public ServiceLevelObjectiveRecord setValidFrom(Date value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.service_level_objective.valid_from</code>.
     */
    public Date getValidFrom() {
        return (Date) get(2);
    }

    /**
     * Setter for <code>public.service_level_objective.valid_to</code>.
     */
    public ServiceLevelObjectiveRecord setValidTo(Date value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.service_level_objective.valid_to</code>.
     */
    public Date getValidTo() {
        return (Date) get(3);
    }

    /**
     * Setter for <code>public.service_level_objective.sla_id</code>.
     */
    public ServiceLevelObjectiveRecord setSlaId(Integer value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.service_level_objective.sla_id</code>.
     */
    public Integer getSlaId() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>public.service_level_objective.time_unit</code>.
     */
    public ServiceLevelObjectiveRecord setTimeUnit(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.service_level_objective.time_unit</code>.
     */
    public String getTimeUnit() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.service_level_objective.relational_operator</code>.
     */
    public ServiceLevelObjectiveRecord setRelationalOperator(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.service_level_objective.relational_operator</code>.
     */
    public String getRelationalOperator() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.service_level_objective.slo_type_id</code>.
     */
    public ServiceLevelObjectiveRecord setSloTypeId(Integer value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.service_level_objective.slo_type_id</code>.
     */
    public Integer getSloTypeId() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>public.service_level_objective.percentage_of_availability</code>.
     */
    public ServiceLevelObjectiveRecord setPercentageOfAvailability(BigDecimal value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>public.service_level_objective.percentage_of_availability</code>.
     */
    public BigDecimal getPercentageOfAvailability() {
        return (BigDecimal) get(8);
    }

    /**
     * Setter for <code>public.service_level_objective.throughput_data_unit</code>.
     */
    public ServiceLevelObjectiveRecord setThroughputDataUnit(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>public.service_level_objective.throughput_data_unit</code>.
     */
    public String getThroughputDataUnit() {
        return (String) get(9);
    }

    /**
     * Setter for <code>public.service_level_objective.throughput_data_size</code>.
     */
    public ServiceLevelObjectiveRecord setThroughputDataSize(BigDecimal value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>public.service_level_objective.throughput_data_size</code>.
     */
    public BigDecimal getThroughputDataSize() {
        return (BigDecimal) get(10);
    }

    /**
     * Setter for <code>public.service_level_objective.throughput_threshold_value</code>.
     */
    public ServiceLevelObjectiveRecord setThroughputThresholdValue(BigDecimal value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>public.service_level_objective.throughput_threshold_value</code>.
     */
    public BigDecimal getThroughputThresholdValue() {
        return (BigDecimal) get(11);
    }

    /**
     * Setter for <code>public.service_level_objective.average_response_time_value</code>.
     */
    public ServiceLevelObjectiveRecord setAverageResponseTimeValue(BigDecimal value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>public.service_level_objective.average_response_time_value</code>.
     */
    public BigDecimal getAverageResponseTimeValue() {
        return (BigDecimal) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row13<Integer, String, Date, Date, Integer, String, String, Integer, BigDecimal, String, BigDecimal, BigDecimal, BigDecimal> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row13<Integer, String, Date, Date, Integer, String, String, Integer, BigDecimal, String, BigDecimal, BigDecimal, BigDecimal> valuesRow() {
        return (Row13) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return ServiceLevelObjective.SERVICE_LEVEL_OBJECTIVE.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return ServiceLevelObjective.SERVICE_LEVEL_OBJECTIVE.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field3() {
        return ServiceLevelObjective.SERVICE_LEVEL_OBJECTIVE.VALID_FROM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field4() {
        return ServiceLevelObjective.SERVICE_LEVEL_OBJECTIVE.VALID_TO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return ServiceLevelObjective.SERVICE_LEVEL_OBJECTIVE.SLA_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return ServiceLevelObjective.SERVICE_LEVEL_OBJECTIVE.TIME_UNIT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return ServiceLevelObjective.SERVICE_LEVEL_OBJECTIVE.RELATIONAL_OPERATOR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field8() {
        return ServiceLevelObjective.SERVICE_LEVEL_OBJECTIVE.SLO_TYPE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field9() {
        return ServiceLevelObjective.SERVICE_LEVEL_OBJECTIVE.PERCENTAGE_OF_AVAILABILITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return ServiceLevelObjective.SERVICE_LEVEL_OBJECTIVE.THROUGHPUT_DATA_UNIT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field11() {
        return ServiceLevelObjective.SERVICE_LEVEL_OBJECTIVE.THROUGHPUT_DATA_SIZE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field12() {
        return ServiceLevelObjective.SERVICE_LEVEL_OBJECTIVE.THROUGHPUT_THRESHOLD_VALUE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field13() {
        return ServiceLevelObjective.SERVICE_LEVEL_OBJECTIVE.AVERAGE_RESPONSE_TIME_VALUE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date component3() {
        return getValidFrom();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date component4() {
        return getValidTo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component5() {
        return getSlaId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getTimeUnit();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getRelationalOperator();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component8() {
        return getSloTypeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component9() {
        return getPercentageOfAvailability();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component10() {
        return getThroughputDataUnit();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component11() {
        return getThroughputDataSize();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component12() {
        return getThroughputThresholdValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component13() {
        return getAverageResponseTimeValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value3() {
        return getValidFrom();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value4() {
        return getValidTo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getSlaId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getTimeUnit();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getRelationalOperator();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value8() {
        return getSloTypeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value9() {
        return getPercentageOfAvailability();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getThroughputDataUnit();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value11() {
        return getThroughputDataSize();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value12() {
        return getThroughputThresholdValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value13() {
        return getAverageResponseTimeValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ServiceLevelObjectiveRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ServiceLevelObjectiveRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ServiceLevelObjectiveRecord value3(Date value) {
        setValidFrom(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ServiceLevelObjectiveRecord value4(Date value) {
        setValidTo(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ServiceLevelObjectiveRecord value5(Integer value) {
        setSlaId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ServiceLevelObjectiveRecord value6(String value) {
        setTimeUnit(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ServiceLevelObjectiveRecord value7(String value) {
        setRelationalOperator(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ServiceLevelObjectiveRecord value8(Integer value) {
        setSloTypeId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ServiceLevelObjectiveRecord value9(BigDecimal value) {
        setPercentageOfAvailability(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ServiceLevelObjectiveRecord value10(String value) {
        setThroughputDataUnit(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ServiceLevelObjectiveRecord value11(BigDecimal value) {
        setThroughputDataSize(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ServiceLevelObjectiveRecord value12(BigDecimal value) {
        setThroughputThresholdValue(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ServiceLevelObjectiveRecord value13(BigDecimal value) {
        setAverageResponseTimeValue(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ServiceLevelObjectiveRecord values(Integer value1, String value2, Date value3, Date value4, Integer value5, String value6, String value7, Integer value8, BigDecimal value9, String value10, BigDecimal value11, BigDecimal value12, BigDecimal value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ServiceLevelObjectiveRecord
     */
    public ServiceLevelObjectiveRecord() {
        super(ServiceLevelObjective.SERVICE_LEVEL_OBJECTIVE);
    }

    /**
     * Create a detached, initialised ServiceLevelObjectiveRecord
     */
    public ServiceLevelObjectiveRecord(Integer id, String name, Date validFrom, Date validTo, Integer slaId, String timeUnit, String relationalOperator, Integer sloTypeId, BigDecimal percentageOfAvailability, String throughputDataUnit, BigDecimal throughputDataSize, BigDecimal throughputThresholdValue, BigDecimal averageResponseTimeValue) {
        super(ServiceLevelObjective.SERVICE_LEVEL_OBJECTIVE);

        set(0, id);
        set(1, name);
        set(2, validFrom);
        set(3, validTo);
        set(4, slaId);
        set(5, timeUnit);
        set(6, relationalOperator);
        set(7, sloTypeId);
        set(8, percentageOfAvailability);
        set(9, throughputDataUnit);
        set(10, throughputDataSize);
        set(11, throughputThresholdValue);
        set(12, averageResponseTimeValue);
    }
}
